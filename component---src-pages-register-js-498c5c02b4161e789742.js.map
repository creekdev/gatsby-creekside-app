{"version":3,"file":"component---src-pages-register-js-498c5c02b4161e789742.js","mappings":"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","sources":["webpack://creekside-logistics-app/./src/pages/register.js"],"sourcesContent":["import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport userContext from \"../state/user/userContext\";\nimport { navigate, Link } from \"gatsby\";\nimport alertContext from \"../state/alert/alertContext\";\nimport {\n  emailValidator,\n  nameValidator,\n  passwordValidator,\n  phoneValidator,\n} from \"../component/utils/utils\";\n\nconst Register = () => {\n  const { handleRegister, url, isLoggedIn } = React.useContext(userContext);\n  const { showMessage } = React.useContext(alertContext);\n  const [auth, setAuth] = React.useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [loading, setLoading] = React.useState(false);\n\n  const [showPassword, setshowPassword] = React.useState(false);\n\n  const holder = React.useRef();\n\n  React.useEffect(() => {\n    holder.current = `rgba(0,0,0,0) url('/mockups/${\n      [\"phone\", \"tab\", \"computer\"][Math.floor(Math.random() * 3)]\n    }.jpg') center center/cover no-repeat local padding-box border-box`;\n  }, []);\n\n  const background = holder.current;\n  if (isLoggedIn() && typeof window !== \"undefined\") {\n    navigate(url || \"/\");\n  }\n\n  const handleChange = (event) => {\n    setAuth({\n      ...auth,\n      [`${event.target.id || event.target.name}`]: event.target.value,\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setshowPassword(!showPassword);\n  };\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    const inValid =\n      nameValidator(auth.name) ||\n      phoneValidator(auth.phone) ||\n      emailValidator(auth.email) ||\n      passwordValidator(auth.password);\n\n    if (inValid) {\n      showMessage(\"warning\", inValid);\n      return;\n    }\n    setLoading(true);\n    handleRegister(auth);\n    setLoading(false);\n  };\n\n  return (\n    <Stack direction={{ xs: \"column\", lg: \"row\" }}>\n      <Box\n        width={1}\n        p={2}\n        height=\"100vh\"\n        minHeight=\"700px\"\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        position=\"relative\"\n      >\n        <Stack width={1} direction=\"column\" maxWidth=\"500px\" spacing={2}>\n          <Avatar\n            src=\"/splash.png\"\n            variant=\"square\"\n            alt=\"logo\"\n            sx={{ alignSelf: \"center\", height: 100, width: 100 }}\n          />\n          <Typography\n            variant=\"h4\"\n            color=\"text.primary\"\n            gutterBottom\n            textAlign=\"center\"\n          >\n            Sign up\n          </Typography>\n          <TextField\n            value={auth.name}\n            onChange={handleChange}\n            label=\"Name\"\n            id=\"name\"\n            name=\"name\"\n            fullWidth\n          />\n          <TextField\n            value={auth.phone}\n            onChange={handleChange}\n            label=\"Phone Number\"\n            id=\"phone\"\n            name=\"phone\"\n            fullWidth\n          />\n          <TextField\n            value={auth.email}\n            onChange={handleChange}\n            label=\"Email\"\n            id=\"email\"\n            name=\"email\"\n            fullWidth\n          />\n          <TextField\n            value={auth.password}\n            onChange={handleChange}\n            label=\"Password\"\n            id=\"password\"\n            name=\"password\"\n            type={showPassword ? \"text\" : \"password\"}\n            fullWidth\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={(e) => e.preventDefault()}\n                    edge=\"end\"\n                  >\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            size=\"large\"\n            onClick={handleClick}\n            disabled={Boolean(\n              !(auth.email && auth.password && auth.name && auth.phone) ||\n                loading\n            )}\n          >\n            {loading ? <CircularProgress size={25} /> : \"Register\"}\n          </Button>\n        </Stack>\n        <Typography\n          variant=\"body2\"\n          color=\"text.secondary\"\n          sx={{ position: \"absolute\", bottom: 20 }}\n          component={Link}\n          to=\"/login\"\n        >\n          Already have an account?\n        </Typography>\n      </Box>\n      <Box\n        display={{ xs: \"none\", lg: \"block\" }}\n        width={1}\n        sx={{ background }}\n        p={20}\n      />\n    </Stack>\n  );\n};\n\nexport default Register;\n"],"names":["React","userContext","handleRegister","url","isLoggedIn","showMessage","alertContext","name","phone","email","password","auth","setAuth","loading","setLoading","showPassword","setshowPassword","holder","current","Math","floor","random","background","window","navigate","handleChange","event","target","id","value","handleClick","e","preventDefault","inValid","nameValidator","phoneValidator","emailValidator","passwordValidator","direction","xs","lg","width","p","height","minHeight","display","justifyContent","alignItems","position","maxWidth","spacing","src","variant","alt","sx","alignSelf","color","gutterBottom","textAlign","onChange","label","fullWidth","type","InputProps","endAdornment","onClick","onMouseDown","edge","size","disabled","Boolean","bottom","component","Link","to"],"sourceRoot":""}