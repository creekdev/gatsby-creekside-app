{"version":3,"file":"component---src-pages-login-js-081b5d7a95c76f3717c8.js","mappings":"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","sources":["webpack://creekside-logistics-app/./src/pages/login.js"],"sourcesContent":["import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Avatar from \"@mui/material/Avatar\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport userContext from \"../state/user/userContext\";\nimport { navigate, Link } from \"gatsby\";\nimport alertContext from \"../state/alert/alertContext\";\nimport { emailValidator, passwordValidator } from \"../component/utils/utils\";\n\nconst Login = () => {\n  const { handleLogin, url, isLoggedIn } = React.useContext(userContext);\n  const { showMessage } = React.useContext(alertContext);\n  const [auth, setAuth] = React.useState({ email: \"\", password: \"\" });\n  const [showPassword, setshowPassword] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const holder = React.useRef();\n\n  React.useEffect(() => {\n    holder.current = `rgba(0,0,0,0) url('/mockups/${\n      [\"phone\", \"tab\", \"computer\"][Math.floor(Math.random() * 3)]\n    }.jpg') center center/cover no-repeat local padding-box border-box`;\n  }, []);\n\n  const background = holder.current;\n\n  if (isLoggedIn() && typeof window !== \"undefined\") {\n    navigate(url || \"/\");\n  }\n\n  const handleChange = (event) => {\n    setAuth({\n      ...auth,\n      [`${event.target.id || event.target.name}`]: event.target.value,\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setshowPassword(!showPassword);\n  };\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    const inValid =\n      emailValidator(auth.email) || passwordValidator(auth.password);\n    if (inValid) {\n      showMessage(\"warning\", inValid);\n      return;\n    }\n    setLoading(true);\n    await handleLogin(auth);\n    setLoading(false);\n  };\n\n  return (\n    <Stack direction={{ xs: \"column\", lg: \"row\" }}>\n      <Box\n        width={1}\n        p={2}\n        height=\"100vh\"\n        minHeight=\"700px\"\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        position=\"relative\"\n      >\n        <Stack\n          component=\"form\"\n          width={1}\n          direction=\"column\"\n          maxWidth=\"500px\"\n          spacing={2}\n        >\n          <Avatar\n            src=\"/splash.png\"\n            variant=\"square\"\n            alt=\"logo\"\n            sx={{ alignSelf: \"center\", height: 100, width: 100 }}\n          />\n          <Typography\n            variant=\"h4\"\n            color=\"text.primary\"\n            gutterBottom\n            textAlign=\"center\"\n          >\n            Welcome Back\n          </Typography>\n          <TextField\n            value={auth.email}\n            onChange={handleChange}\n            label=\"Email\"\n            name=\"email\"\n            id=\"email\"\n            autoComplete=\"email\"\n            fullWidth\n          />\n          <TextField\n            value={auth.password}\n            onChange={handleChange}\n            label=\"Password\"\n            name=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            type={showPassword ? \"text\" : \"password\"}\n            fullWidth\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={(e) => e.preventDefault()}\n                    edge=\"end\"\n                  >\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Typography\n            variant=\"body2\"\n            color=\"primary.light\"\n            alignSelf=\"flex-end\"\n            component={Link}\n            to=\"/forgotpassword\"\n            sx={{ textDecoration: \"none\" }}\n          >\n            Forgot password?\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            size=\"large\"\n            onClick={handleClick}\n            disabled={Boolean(!(auth.email && auth.password) || loading)}\n          >\n            {loading ? <CircularProgress size={25} /> : \"Login\"}\n          </Button>\n        </Stack>\n        <Typography\n          variant=\"body2\"\n          color=\"text.secondary\"\n          sx={{ position: \"absolute\", bottom: 20 }}\n          component={Link}\n          to=\"/register\"\n        >\n          Don't have an account?\n        </Typography>\n      </Box>\n      <Box\n        display={{ xs: \"none\", lg: \"block\" }}\n        width={1}\n        // bgcolor=\"secondary.main\"\n        sx={{ background }}\n        p={20}\n      />\n    </Stack>\n  );\n};\n\nexport default Login;\n"],"names":["React","userContext","handleLogin","url","isLoggedIn","showMessage","alertContext","email","password","auth","setAuth","showPassword","setshowPassword","loading","setLoading","holder","current","Math","floor","random","background","window","navigate","handleChange","event","target","id","name","value","handleClick","e","preventDefault","inValid","emailValidator","passwordValidator","direction","xs","lg","width","p","height","minHeight","display","justifyContent","alignItems","position","component","maxWidth","spacing","src","variant","alt","sx","alignSelf","color","gutterBottom","textAlign","onChange","label","autoComplete","fullWidth","type","InputProps","endAdornment","onClick","onMouseDown","edge","Link","to","textDecoration","size","disabled","Boolean","bottom"],"sourceRoot":""}